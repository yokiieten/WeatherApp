//
//  ForeCastInteractor.swift
//  WeatherApp
//
//  Created by Sahassawat on 15/6/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ForeCastBusinessLogic
{
  func getForecast(request: ForeCast.GetForeCast.Request)
}

protocol ForeCastDataStore {
    var lon: Double { get set }
    var lat: Double { get set }
}

class ForeCastInteractor: ForeCastBusinessLogic, ForeCastDataStore
{
  var presenter: ForeCastPresentationLogic?
  var worker: ForeCastWorker?
  var lon: Double = 0.0
  var lat: Double = 0.0
    var apiKey = CoreManager.sharedInstance.apiKey
  
  // MARK: Do something
  
  func getForecast(request: ForeCast.GetForeCast.Request) {
      worker?.fetchForecast(lat: lat, lon: lon, apiKey: apiKey, completion: { result in
          switch result {
          case .success(let result):
              if let response = result {
//                  self.lat = result?.coord?.lat ?? 0.0
//                  self.lon = result?.coord?.lon ?? 0.0
//                  self.presenter?.presentWeatherByCity(response: .init(result: .success(result: response)))
                  
              }
          case .failure(error: let error): break
//              self.presenter?.presentWeatherByCity(response: .init(result: .failure(error: error)))
          }
      })
  }
}
